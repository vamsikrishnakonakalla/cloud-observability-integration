{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "projectName": {
            "type": "string",
            "metadata": {
                "description": "Specifies a project name that is used to generate the Event Hub name and the Namespace name."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Specifies the Azure location for all resources."
            }
        },
        "functionName": {
            "type": "string"
        },
        "functionSourceCode": {
            "type": "string",
            "metadata": {
                "description": "Source code for the log forwarding function"
            }
        },
        "swiApiKey": {
            "type": "string",
            "metadata": {
                "description": "SolarWinds API key"
            }
        },
        "swiOtelEndpoint": {
            "type": "string",
            "metadata": {
                "description": "SWI endpoint to send logs"
            }
        }
    },
    "functions": [],
    "variables": {
        "eventHubNamespaceName": "[concat(parameters('projectName'), 'ns-', uniquestring(resourceGroup().id))]",
        "eventHubName": "[parameters('projectName')]",

        "connectionStringKey": "[concat('swi-',variables('eventHubNamespaceName'),'-AccessKey')]",
        "authRule": "[resourceId('Microsoft.EventHub/namespaces/authorizationRules', variables('eventHubNamespaceName'),'RootManageSharedAccessKey')]",

        "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'swistoracc')]",
        "functionAppName": "[concat(parameters('projectName'), '-app-', uniquestring(resourceGroup().id))]",

        "functionName": "[parameters('functionName')]"
    },
    "resources": [
        {
            "type": "Microsoft.EventHub/namespaces",
            "apiVersion": "2018-01-01-preview",
            "name": "[variables('eventHubNamespaceName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard",
                "tier": "Standard",
                "capacity": 1
            },
            "properties": {}
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "apiVersion": "2017-04-01",
            "name": "[concat(variables('eventHubNamespaceName'), '/', variables('eventHubName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespaceName'))]"
            ],
            "properties": {
                "messageRetentionInDays": 1,
                "partitionCount": 2
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-04-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-12-01",
            "name": "[variables('functionAppName')]",
            "location": "[parameters('location')]",
            "kind": "functionapp",
            "properties": {
                "siteConfig": {
                    "netFrameworkVersion": "v8.0",
                    "use32BitWorkerProcess": true,
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-04-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-04-01').keys[0].value)]"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "SWI_API_KEY",
                            "value": "[parameters('swiApiKey')]"
                        },
                        {
                            "name": "SWI_OTEL_ENDPOINT",
                            "value": "[parameters('swiOtelEndpoint')]"
                        },
                        {
                            "name": "[variables('connectionStringKey')]",
                            "value": "[listKeys(variables('authRule'),'2017-04-01').primaryConnectionString]"
                        }
                    ]
                },
                "httpsOnly": true
            },
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespaceName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ]
        },
        {
            "name": "[format('{0}/{1}', variables('functionAppName'), variables('functionName'))]",
            "type": "Microsoft.Web/sites/functions",
            "apiVersion": "2018-11-01",
            "properties": {
                "config": {
                    "bindings": [
                        {
                            "name": "events",
                            "type": "eventHubTrigger",
                            "direction": "in",
                            "eventHubName": "[variables('eventhubName')]",
                            "connection": "[variables('connectionStringKey')]",
                            "cardinality": "many",
                            "dataType": "",
                            "consumerGroup": "$Default"
                        }
                    ],
                    "disabled": false
                },
                "files": {
                    "run.csx": "[parameters('functionSourceCode')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
            ]
        }

    ],
    "outputs": {}
}